{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/redux-store.js","logo.svg","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","StoreContext.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","App.js","index.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likeCount","newPostText","profileReducer","state","action","type","newPost","push","newText","SEND_MESSAGE","UPDATE_NEW_MESSAGE_BODY","messages","dialogs","name","newMessageBody","dialogsReducer","newMessage","body","reducers","combineReducers","profilePage","dialogsPage","store","createStore","Header","className","classes","header","src","logo","alt","Navbar","c","nav","item","to","activeClassName","active","ProfileInfo","descriptionBlock","Post","MyPosts","addPost","updateNewPostText","newPostElement","createRef","postsBlock","ref","onChange","text","current","value","onClick","map","p","StoreContext","createContext","Provider","props","children","MyPostsContainer","Consumer","getState","dispatch","updateNewPostTextActionCreator","Profile","Music","News","DialogItem","dialog","Message","Dialogs","updateNewMessageBody","sendMessage","newMessageElement","dialogsItems","d","m","DialogsContainer","updateMessageBodyCreator","App","exact","path","render","component","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.c8e933e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3W8Xp\",\"posts\":\"MyPosts_posts__3bcBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2v4Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3Fzxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1tGbM\"};","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [{id: 1, message: \"Хай, это мой первый пост!\", likeCount: 4}, {id: 2, message: \"Новая Зеландия, жди меня!♥\", likeCount: 18}],\r\n    newPostText: 'it-kamasutra'\r\n}\r\n\r\nconst profileReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = { id: 5, message: state.newPostText, likeCount: 0 };\r\n            state.posts.push(newPost);\r\n            state.newPostText = '';\r\n            // this._callSubscriber(this._state);  // хочу сообщить внешнему миру что стейт изменился\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT:\r\n            state.newPostText = action.newText;\r\n        // вызываем subscriber,если subscriber не был переопределён вызовется console.log('no subscribers'), но если кто-то\r\n        // подписался и отдал своего обсервера(rerenderEntireTree из index.js) и получается мы вызываем rerenderEntireTree из index.js как-будто\r\n        // this._callSubscriber(this._state);  // уведомить подписчка\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = text => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nlet initialState = {\r\n    messages: [{id: 1, message: \"Hi how are you?\"}, {id: 2, message: \"What did you do yesterday?\"}, {id: 3, message: \"Yes, sure\"}],\r\n    dialogs: [{id: 1, name: \"Dima\"}, {id: 2, name: \"Sveta\"}, {id: 3, name: \"Vika\"}, {id: 4, name: \"Masha\"}],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage = { id:4, message: state.newMessageBody }\r\n            state.messages.push(newMessage);\r\n            state.newMessageBody = '';\r\n            return state;\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\n\r\nexport const updateMessageBodyCreator = body => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport logo from \"../../logo.svg\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={logo} alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport c from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/profile\" activeClassName={c.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={c.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/news\" activeClassName={c.active}>News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/music\" activeClassName={c.active}>Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/settings\" activeClassName={c.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport c from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\" alt=\"\" />\r\n            </div>\r\n            <div className={c.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport c from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCount}) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src=\"https://i.pinimg.com/236x/c2/af/09/c2af0941a9eace5f0ba3dc63284d3860--mr-bean-funny-color-blue.jpg\" alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>{likeCount}♥</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, { createRef } from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = ({posts, newPostText, addPost, updateNewPostText}) => {\r\n\r\n    const newPostElement = createRef();\r\n\r\n    const onAddPost = () => {\r\n        addPost();\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        const text = newPostElement.current.value;\r\n        updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} onChange={onPostChange} value={newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {posts.map(p => <Post message={p.message} likeCount={p.likeCount} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import React, { createContext } from \"react\";\r\n\r\nconst StoreContext = createContext(null);\r\n\r\nexport const Provider = (props) => {   // Дайте через пропсы стор и она присобачит к value.\r\n    return (\r\n        <StoreContext.Provider value={props.store}>\r\n            {props.children}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StoreContext;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport StoreContext from \"../../../StoreContext\";\r\n\r\nconst MyPostsContainer = () => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    const state = store.getState();\r\n\r\n                    const addPost = () => {\r\n                        store.dispatch(addPostActionCreator());   // нарушается принцип single responsibility. Компонент не должен думать над тем какой-объект создать как {type:ADD-POST}\r\n                    }\r\n\r\n                    const onPostChange = text => {\r\n                        const action = updateNewPostTextActionCreator(text);\r\n                        store.dispatch(action);\r\n                    }\r\n\r\n                    return <MyPosts posts={state.profilePage.posts} newPostText={state.profilePage.newPostText} addPost={addPost} updateNewPostText={onPostChange} />\r\n\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport c from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>music</div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport c from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>news</div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport c from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    return (\r\n        <div className={c.dialog}>\r\n            <img src=\"https://topmsg.ru/wp-content/uploads/whatsapp-avatar-1.png\" alt=\"\"/>\r\n            <NavLink to={`/dialogs/${id}`}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import c from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={c.message}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React, { createRef } from \"react\";\r\nimport c from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = ({dialogsPage, updateNewMessageBody, sendMessage}) => {\r\n\r\n    const newMessageElement = createRef();\r\n\r\n    const onSendMessageClick = () => {\r\n        sendMessage();\r\n    }\r\n\r\n    const onNewMessageChange = () => {\r\n        updateNewMessageBody(newMessageElement.current.value);\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogsItems}>\r\n                {dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} />)}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {dialogsPage.messages.map(m => <Message message={m.message} />)}\r\n            </div>\r\n            <div>\r\n                <textarea ref={newMessageElement} onChange={onNewMessageChange} value={dialogsPage.newMessageBody} />\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>Add message</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator, updateMessageBodyCreator } from \"../../redux/dialogs-reducer\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nconst DialogsContainer = () => {\r\n\r\n    return (\r\n        // если на одной строке после <StoreContext.Consumer> будет фигурная скобка-выкинет ошибку, баг реакта !\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    const state = store.getState().dialogsPage;\r\n\r\n                    const onSendMessageClick = () => {\r\n                        store.dispatch(sendMessageCreator());\r\n                    }\r\n\r\n                    const onNewMessageChange = body => {\r\n                        store.dispatch(updateMessageBodyCreator(body))\r\n                    }\r\n\r\n                    return <Dialogs dialogsPage={state} sendMessage={onSendMessageClick} updateNewMessageBody={onNewMessageChange} />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default DialogsContainer;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n      <div className='app-wrapper'>\r\n          <Header />\r\n          <Navbar />\r\n          <div className='app-wrapper-content'>\r\n              <Route exact path='/dialogs' render={() => <DialogsContainer />} />\r\n              <Route path='/profile' render={() => <Profile />} />\r\n              <Route path='/news' component={News} />\r\n              <Route path='/music' component={Music} />\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from './redux/redux-store';\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"./StoreContext\";\r\n\r\nlet rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <Router>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </Router>, document.getElementById('root')\r\n    );\r\n}\r\n\r\nrerenderEntireTree(store.getState());\r\n\r\nstore.subscribe(() => { // Когда стейт изменится, стор вызовет нашу стрелочную функцию, чтобы запросит заново стейт\r\n    rerenderEntireTree();\r\n})\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2t6jB\",\"item\":\"Navbar_item__1WmbN\",\"active\":\"Navbar_active__3R5Tk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3W1mq\",\"dialogsItems\":\"Dialogs_dialogsItems__3nTdQ\",\"dialog\":\"Dialogs_dialog__T8HSM\",\"active\":\"Dialogs_active__ijEmk\",\"messages\":\"Dialogs_messages__1akpd\",\"message\":\"Dialogs_message__3dNHj\"};"],"sourceRoot":""}