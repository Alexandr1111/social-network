{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/users-reducer.js","redux/redux-store.js","logo.svg","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","assets/images/user.png","components/Users/Users.jsx","assets/images/preloader.gif","components/common/Preloader/Preloader.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likeCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","SEND_MESSAGE","UPDATE_NEW_MESSAGE_BODY","messages","dialogs","name","newMessageBody","dialogsReducer","newMessage","body","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","map","u","userId","followed","count","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","window","Header","className","classes","header","src","logo","alt","Navbar","c","nav","item","to","activeClassName","active","Music","News","DialogItem","dialog","Message","Dialogs","updateNewMessageBody","sendMessage","newMessageElement","createRef","dialogsItems","d","m","ref","onChange","current","value","onClick","DialogsContainer","connect","dispatch","updateMessageBodyCreator","Users","onPageChanged","follow","unfollow","pagesCount","Math","ceil","pages","i","push","p","selectedPage","photos","small","userPhoto","status","Preloader","props","preloader","UsersContainer","pageNumber","toggleIsFetching","setCurrentPage","axios","then","response","setUsers","data","items","this","setTotalUsersCount","totalCount","Component","ProfileInfo","descriptionBlock","large","Post","MyPosts","addPost","updateNewPostText","newPostElement","postsBlock","text","MyPostsContainer","updateNewPostTextActionCreator","Profile","ProfileContainer","setUserProfile","App","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2c56e4af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3W1mq\",\"dialogsItems\":\"Dialogs_dialogsItems__3nTdQ\",\"dialog\":\"Dialogs_dialog__T8HSM\",\"active\":\"Dialogs_active__ijEmk\",\"messages\":\"Dialogs_messages__1akpd\",\"message\":\"Dialogs_message__3dNHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__r-Zsh\",\"selectedPage\":\"Users_selectedPage__Ag5OL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3W8Xp\",\"posts\":\"MyPosts_posts__3bcBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2v4Ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3Fzxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1tGbM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2t6jB\",\"item\":\"Navbar_item__1WmbN\",\"active\":\"Navbar_active__3R5Tk\"};","const ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [{id: 1, message: \"Хай, это мой первый пост!\", likeCount: 4}, {id: 2, message: \"Новая Зеландия, жди меня!♥\", likeCount: 18}],\r\n    newPostText: 'it-kamasutra',\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = { id: 5, message: state.newPostText, likeCount: 0 };\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        case UPDATE_NEW_POST_TEXT:\r\n            // вызываем subscriber,если subscriber не был переопределён вызовется console.log('no subscribers'), но если кто-то\r\n            // подписался и отдал своего обсервера(rerenderEntireTree из index.js) и получается мы вызываем rerenderEntireTree из index.js как-будто\r\n            // this._callSubscriber(this._state);  // уведомить подписчка\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {\r\n        type: ADD_POST\r\n    }\r\n}\r\n\r\nexport const updateNewPostTextActionCreator = text => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n}\r\n\r\nexport const setUserProfile = profile => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nlet initialState = {\r\n    messages: [{id: 1, message: \"Hi how are you?\"}, {id: 2, message: \"What did you do yesterday?\"}, {id: 3, message: \"Yes, sure\"}],\r\n    dialogs: [{id: 1, name: \"Dima\"}, {id: 2, name: \"Sveta\"}, {id: 3, name: \"Vika\"}, {id: 4, name: \"Masha\"}],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage = { id: 4, message: state.newMessageBody };\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    }\r\n}\r\n\r\nexport const updateMessageBodyCreator = body => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: false\r\n}\r\n\r\nconst usersReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {   // нужно сделать копию ТОЛЬКО того объекта(юзера) который меняем\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users    // ...спред action.users, т.к. action.users-массив, склеиваем 2 массива в 1\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = userId => {\r\n    return {\r\n        type: FOLLOW, userId\r\n    }\r\n}\r\n\r\nexport const unfollow = userId => {\r\n    return {\r\n        type: UNFOLLOW, userId\r\n    }\r\n}\r\n\r\nexport const setUsers = users => {\r\n    return {\r\n        type: SET_USERS, users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = currentPage => {\r\n    return {\r\n        type: SET_CURRENT_PAGE, currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = totalUsersCount => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT, count: totalUsersCount\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = isFetching => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING, isFetching\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport logo from \"../../logo.svg\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={logo} alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport c from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/profile\" activeClassName={c.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={c.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/users\" activeClassName={c.active}>Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/news\" activeClassName={c.active}>News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/music\" activeClassName={c.active}>Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/settings\" activeClassName={c.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport c from \"./Music.module.css\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>music</div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\nimport c from \"./News.module.css\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>news</div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport c from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    return (\r\n        <div className={c.dialog}>\r\n            <img src=\"https://topmsg.ru/wp-content/uploads/whatsapp-avatar-1.png\" alt=\"\"/>\r\n            <NavLink to={`/dialogs/${id}`}>\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import c from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={c.message}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React, { createRef } from \"react\";\r\nimport c from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = ({dialogsPage, updateNewMessageBody, sendMessage}) => {\r\n\r\n    const newMessageElement = createRef();\r\n\r\n    const onSendMessageClick = () => {\r\n        sendMessage();\r\n    }\r\n\r\n    const onNewMessageChange = () => {\r\n        updateNewMessageBody(newMessageElement.current.value);\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogsItems}>\r\n                {dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />)}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />)}\r\n            </div>\r\n            <div>\r\n                <textarea ref={newMessageElement} onChange={onNewMessageChange} value={dialogsPage.newMessageBody} />\r\n            </div>\r\n            <div>\r\n                <button onClick={onSendMessageClick}>Add message</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator, updateMessageBodyCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n    // state === store.getState()\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateNewMessageBody: body => {\r\n            dispatch(updateMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\n// Создаёт контейнерную компоненту SuperDialogsContainer, которая рендерит презент. компоненту Dialogs и внутрь Dialogs\r\n// в качестве пропсов передаёт объект возвращаемый из f1() и f2(). f1-пропсы, f2-колбэки\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n// connect подписывается на изменение стейта, когда он меняется заново вызывается f1() и формируется новый объект, сравниваясь со старым\r\n\r\nexport default DialogsContainer;\r\n","export default __webpack_public_path__ + \"static/media/user.43e64566.png\";","import c from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, follow, unfollow}) => {\r\n\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);   // При totalUsersCount 19 и pageSize 5 не теряются последние пользователи\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => <span className={currentPage === p && c.selectedPage} onClick={() => onPageChanged(p)}>{p}</span>)}\r\n            </div>\r\n            {users.map(u => {\r\n                return (\r\n                    <div>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={`/profile/${u.id}`}>\r\n                                    <img src={u.photos.small ? u.photos.small : userPhoto} alt=\"\" className={c.userPhoto} />\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {u.followed\r\n                                    ? <button onClick={()=>unfollow(u.id)}>Unfollow</button>\r\n                                    : <button onClick={()=>follow(u.id)}>Follow</button>}\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"u.location.country\"}</div>\r\n                                <div>{\"u.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;\r\n","export default __webpack_public_path__ + \"static/media/preloader.30e900c6.gif\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    toggleIsFetching\r\n} from \"../../redux/users-reducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?pages=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then((response) => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            })\r\n    }\r\n\r\n    onPageChanged = pageNumber => {\r\n        this.props.toggleIsFetching(true);\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then((response) => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { users, follow, unfollow, totalUsersCount, pageSize, currentPage, isFetching } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {isFetching ? <Preloader /> : null}\r\n\r\n                <Users\r\n                    totalUsersCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                    users={users}\r\n                    onPageChanged={this.onPageChanged}\r\n                    follow={follow}\r\n                    unfollow={unfollow}\r\n                    isFetching={isFetching}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {  // Здесь сидит весь стейт приложения\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         follow: userId => {   //  колбек, т.к. презентационная компонента вызовет только по необходимости\r\n//             dispatch(followAC(userId))  // диспатчим результат работы actionCreator\r\n//         },\r\n//         unfollow: userId => {\r\n//             dispatch(unFollowAC(userId))\r\n//         },\r\n//         setUsers: users => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: pageNumber => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: totalCount => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: IsFetching => {\r\n//             dispatch(toggleIsFetchingAC(IsFetching))\r\n//         },\r\n//     }\r\n// }\r\n\r\n// follow: follow\r\nexport default connect(mapStateToProps, { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching })(UsersContainer);\r\n","import React from \"react\";\r\nimport c from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileInfo = ({profile}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\" alt=\"\" />\r\n            </div>\r\n            <div className={c.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\" />\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport c from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCount}) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src=\"https://i.pinimg.com/236x/c2/af/09/c2af0941a9eace5f0ba3dc63284d3860--mr-bean-funny-color-blue.jpg\" alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>{likeCount}♥</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React, { createRef } from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = ({posts, newPostText, addPost, updateNewPostText}) => {\r\n\r\n    const newPostElement = createRef();\r\n\r\n    const onAddPost = () => {\r\n        addPost();\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        const text = newPostElement.current.value;\r\n        updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement} onChange={onPostChange} value={newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {posts.map(p => <Post message={p.message} likeCount={p.likeCount} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const MyPostsContainer = () => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     const state = store.getState();\r\n//\r\n//                     const addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());   // нарушается принцип single responsibility. Компонент не должен думать над тем какой-объект создать как {type:ADD-POST}\r\n//                     }\r\n//\r\n//                     const onPostChange = text => {\r\n//                         const action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     }\r\n//\r\n//                     return <MyPosts posts={state.profilePage.posts} newPostText={state.profilePage.newPostText} addPost={addPost} updateNewPostText={onPostChange} />\r\n//\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n        updateNewPostText: text => {\r\n            const action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = ({profile}) => {\r\n    return profile ? (\r\n        <div>\r\n            <ProfileInfo profile={profile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    ) : <Preloader />\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as axios from \"axios\";\r\nimport Profile from \"./Profile\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/3`)\r\n            .then((response) => {\r\n                this.props.setUserProfile(response.data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { profile } = this.props;\r\n        return <Profile {...this.props} profile={profile} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setUserProfile })(ProfileContainer);\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n      <div className='app-wrapper'>\r\n          <Header />\r\n          <Navbar />\r\n          <div className='app-wrapper-content'>\r\n              <Route exact path='/dialogs' render={() => <DialogsContainer />} />\r\n              <Route path='/profile' render={() => <ProfileContainer />} />\r\n              <Route path='/users' render={() => <UsersContainer />} />\r\n              <Route path='/news' component={News} />\r\n              <Route path='/music' component={Music} />\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport store from './redux/redux-store';\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// С введением connect убрали подписку и отрисовываем дерево единожды\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// const rerenderEntireTree = () => {\r\n//     ReactDOM.render(\r\n//         <Router>\r\n//             <Provider store={store}>\r\n//                 <App />\r\n//             </Provider>\r\n//         </Router>, document.getElementById('root')\r\n//     );\r\n// }\r\n//\r\n// rerenderEntireTree();\r\n\r\n// с введением connect подписка не нужна, он сам субскрайбится\r\n// store.subscribe(() => { // Когда стейт изменится, стор вызовет нашу стрелочную функцию, чтобы запросит заново стейт\r\n//     rerenderEntireTree();\r\n// })\r\n\r\n"],"sourceRoot":""}