{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","value","onChange","e","target","onBlur","updateStatus","autoFocus","onDoubleClick","reduxForm","form","handleSubmit","profile","error","onSubmit","Field","name","placeholder","component","Input","validate","type","Textarea","Object","keys","contacts","map","key","className","c","contact","s","formSummaryError","btn","ProfileData","isOwner","activateEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","onClick","Contact","href","ProfileInfo","savePhoto","saveProfile","src","alt","descriptionBlock","photos","large","user","mainPhoto","files","length","initialValues","formData","then","Post","message","likeCount","item","maxLength10","maxLengthCreator","AddNewPostForm","required","MyPosts","posts","addPost","postsBlock","values","newPostText","p","id","MyPostsContainer","connect","state","profilePage","dispatch","body","addPostActionCreator","Profile","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2dcc38d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2gyzB\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1nLwb\",\"contact\":\"ProfileInfo_contact__2JW-A\",\"contactValue\":\"ProfileInfo_contactValue__7_F_p\",\"btn\":\"ProfileInfo_btn__35r8e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2BACy\",\"posts\":\"MyPosts_posts__2x3M3\",\"btn\":\"MyPosts_btn__16twG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1nQ7J\"};","import React, {useState, useEffect, FC, ChangeEvent} from \"react\";\r\n\r\ntype P = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus: FC<P> = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <span>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus />\r\n                  </span>\r\n                : <span>\r\n                    <span onDoubleClick={activateEditMode}>{status || '-----'}</span>\r\n                  </span>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport s from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <b>Full name</b>: <Field name='fullName' placeholder='Full name' component={Input} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: <Field name='lookingForAJob' component='input' type='checkbox' validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: <Field name='lookingForAJobDescription' placeholder='My professional skills' component={Textarea} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: <Field name='aboutMe' placeholder='About me' component={Textarea} validate={[]} />\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={c.contact}>\r\n                            <b>{key}</b>: <Field name={\"contacts.\" + key} placeholder={key} component={Input} validate={[]} />\r\n                           </div>\r\n            })}\r\n            </div>\r\n            {error &&\r\n            <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <button className={c.btn}>save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'edit-profile'})(ProfileDataForm);","import React, {useState} from \"react\";\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport user from \"../../../assets/images/user.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = formData => {\r\n        saveProfile(formData)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\" alt=\"\"/>\r\n            </div>\r\n            <div className={c.descriptionBlock}>\r\n                <img src={profile.photos.large || user} alt=\"\" className={c.mainPhoto}/>\r\n                {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                <div>\r\n                    <div>\r\n                        <b>Status</b>: <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                    </div>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                        : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => setEditMode(true)} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <b>FullName</b>: {profile.fullName && profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription && profile.lookingForAJobDescription}\r\n            </div>}\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe && profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n            {isOwner &&<div>\r\n                <button className={c.btn} onClick={activateEditMode}>Редактировать</button>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={c.contact}>\r\n            <b>{contactTitle}</b>: <a className={c.contactValue} href={contactValue} target='_blank'><b>{contactValue}</b></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport c from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCount}) => {\r\n    return (\r\n        <div className={c.item}>\r\n            <img src=\"https://i.pinimg.com/236x/c2/af/09/c2af0941a9eace5f0ba3dc63284d3860--mr-bean-funny-color-blue.jpg\" alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>{likeCount}♥</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);   // Форма не будет сабмитится просто\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button className={c.btn} type='submit'>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'addPost'})(AddNewPostForm);\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n\r\n    const onAddPost = values => {\r\n        addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddNewPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={c.posts}>\r\n                {posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// const MyPostsContainer = () => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     const state = store.getState();\r\n//\r\n//                     const addPost = () => {\r\n//                         store.dispatch(addPostActionCreator());   // нарушается принцип single responsibility. Компонент не должен думать над тем какой-объект создать как {type:ADD-POST}\r\n//                     }\r\n//\r\n//                     const onPostChange = text => {\r\n//                         const action = updateNewPostTextActionCreator(text);\r\n//                         store.dispatch(action);\r\n//                     }\r\n//\r\n//                     return <MyPosts posts={state.profilePage.posts} newPostText={state.profilePage.newPostText} addPost={addPost} updateNewPostText={onPostChange} />\r\n//\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: body => {\r\n            dispatch(addPostActionCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    return profile ? (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={profile}\r\n                isOwner={isOwner}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                savePhoto={savePhoto}\r\n                saveProfile={saveProfile}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    ) : <Preloader />\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { profile, status, updateStatus, savePhoto, saveProfile } = this.props;\r\n        return <Profile\r\n            profile={profile}\r\n            status={status}\r\n            updateStatus={updateStatus}\r\n            isOwner={!this.props.match.params.userId}\r\n            savePhoto={savePhoto}\r\n            saveProfile={saveProfile}\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n// const AuthRedirectComponent = WithAuthRedirect(ProfileContainer);\r\n\r\n// const WithURLDataContainerComponent = withRouter(AuthRedirectComponent); // HOC(компонент, который возвращает новый компонент) занимается закидыванием данных из урла\r\n\r\n// export default connect( mapStateToProps, { getUserProfile } )(WithURLDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } ),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}